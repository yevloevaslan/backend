swagger: '2.0'
info:
  title: translator
  version: 1.0.0
host: '68.183.7.178:1854'
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  /users/login:
    post:
      tags:
      - User
      summary: Send code for register/login
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            email:
              type: string
              format: email
      responses:
        200:
          description: ok
  /users/confirm:
    post:
      tags:
      - User
      summary: Confirm code for authorization
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            _id:
              type: string
            code:
              type: string
      responses:
        200:
          description: if param firstIn true, then redirect user on update info about him
  /users/deleting:
    delete:
      tags:
      - User
      summary: Delete account
      responses:
        200:
          description: ok
  /users/info:
    get:
      tags:
      - User
      summary: Get info about me
      responses:
        200:
          description: ok
    put:
      tags:
      - User
      summary: Update info about me
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            middleName:
              type: string
            email:
              type: string
            img:
              type: string
      responses:
        200:
          description: ok
  /tasks:
    get:
      tags:
        - Task
      summary: Get random not completed user task
      responses:
        200:
          description: ok
  /tasks/{id}:
    get:
      tags:
        - Task
      summary: Get  user task
      parameters:
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: ok
  /tasks/{id}/answer:
    post:
      tags:
        - Task
      summary: Check task answer
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              answer:
                type: string
      responses:
        200:
          description: ok
  /tasks/random:
    get:
      tags:
        - Task
      summary: Get random task by level
      parameters:
      - in: query
        name: level
        type: string
      responses:
        200:
          description: ok
  /about_projects:
    get:
      tags:
      - AboutProject
      summary: Get info about project
      responses:
        200:
          description: ok
  /about_projects/grammar:
    get:
      tags:
        - AboutProject
      summary: Find grammar file
      responses:
        200:
          description: ok
  /dictionaries/:
    get:
      tags:
      - Dictionaries
      summary: find word
      parameters:
      - in: query
        name: _id
        type: string
      - in: query
        name: ing
        type: string
      - in: query
        name: rus
        type: string
      responses:
        200:
          description: ok